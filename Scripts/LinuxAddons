#!/bin/bash
# ----------------------------------
#  variables
# ----------------------------------
#    tput bold – Set bold mode
#    tput dim – turn on half-bright mode
#    tput smul – begin underline mode
#    tput rmul – exit underline mode
#    tput rev – Turn on reverse mode
#    tput smso – Enter standout mode (bold on rxvt)
#    tput rmso – Exit standout mode
#    tput sgr0 – Turn off all attributes
#    0 – Black
#    1 – Red
#    2 – Green
#    3 – Yellow
#    4 – Blue
#    5 – Magenta
#    6 – Cyan
#    7 – White
# ----------------------------------
# User defined function
# ----------------------------------
pause(){
  read -p "Press [Enter] key to continue..." fackEnterKey
}

pause0(){
  read -p "                   Press [Enter] key to continue..." fackEnterKey
}

# function to display menus

function show_menus() {
	clear
    	echo -e "";
	echo " | |   (_)_ __  _   ___  __    / \   __| | __| | ___  _ __  ___  "
	echo " | |   | | '_ \| | | \ \/ /   / _ \ / _' |/ _' |/ _ \| '_ \/ __| "
	echo " | |___| | | | | |_| |>  <   / ___ \ (_| | (_| | (_) | | | \__ \ "
	echo " |_____|_|_| |_|\__,_/_/\_\ /_/   \_\__,_|\__,_|\___/|_| |_|___/ "
    	echo -e "";
    	pause0
    	clear
    	echo "~~~~~~~~~~~~~~~~~~~~~"
    	echo "      Main Menu      "
    	echo "~~~~~~~~~~~~~~~~~~~~~"
    	echo "1. Cool Stuff"
    	echo "2. Terminal Emulators"
    	echo "3. Useful Links"
    	echo "4. Quick Launch"
    	echo "5. Exit"
}

read_options(){
	local choice
	read -p "Enter choice [ 1 - 5] " choice
	case $choice in
        1) Cool_Stuff ;;
        2) Terminal_Emulators ;;
	3) Useful_Links ;;
	4) Quick_Launch ;;
	5) exit 0;;
	*) echo -e "${RED}Error...${STD}" && sleep 1
	esac
}

Cool_Stuff(){
    show_menus() {
    clear
    tput sgr0
    echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"    
    echo "              Cool Stuff"
    echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
    echo "1. System Info"
    echo "2. Make ASCII Banners"
    echo "3. View Any Image as ASCII" 
    echo "4. Matrix Effect"
    echo "5. Generate a Random Fake Identity"
    echo "6. Exit"
}

read_options(){
    local choice
    read -p "Enter choice [ 1 - 6] " choice
    case $choice in
        1) System_Info ;;
        2) Make_ASCII_Banners ;;
        3) View_Any_Image_as_ASCII ;;
        4) Matrix_Effect ;;
        5) Generate_a_Random_Fake_Identity ;;
        6) exit 0;;
        *) echo -e "${RED}Error...${STD}" && sleep 1
    esac
}

System_Info(){
    tput setaf 2
    echo "Install Neofetch?"
    tput setaf 3
    echo "https://github.com/thestinger/termite"
    tput sgr0
    pause
    sudo apt-get update
    sudo apt-get install neofetch
    clear
    neofetch
    pause
    return
}   

Make_ASCII_Banners(){
    tput setaf 2
    echo "Install Figlet?"
    tput setaf 3
    echo "http://www.figlet.org/"
    tput sgr0
    pause
    sudo apt-get install figlet
    clear
    tput setaf 2
    figlet -I help
    tput sgr0
    pause
    clear
    figlet KillerDroid96
    pause
    return
}

View_Any_Image_as_ASCII(){
    tput setaf 2
    echo "Install AsciiView?"
    tput setaf 3
    echo "Example: asciiview elephant.jpg -driver curses"
    tput sgr0
    pause
    sudo apt-get install aview aaflip NetPBM imagemagick
    asciiview
    pause
    clear
    asciiview '/root/Pictures/googlelogo.png' -driver Linux
    pause
    return
}

Matrix_Effect(){
    tput setaf 2
    echo "Install Matrix Effect?"
    tput sgr0
    pause
    sudo apt-get install cmatrix
    tput setaf 2
    clear
    cmatrix -h
    tput sgr0
    pause
    cmatrix
    return
}

Generate_a_Random_Fake_Identity(){
    tput setaf 2
    echo "Install Rig?"
    tput sgr0
    pause
    sudo apt-get install rig 
    clear
    tput setaf 2
    rig
    tput sgr0
    pause
    return
}
}

Terminal_Emulators(){
    show_menus(){
    clear
    echo "~~~~~~~~~~~~~~~~~~~"
    echo " Terminal Emulators"
    echo "~~~~~~~~~~~~~~~~~~~"
    echo "1. Glances"
    echo "2. Htop"
    echo "3. Termite"
    echo "4. Tilix"
    echo "5. Exit"
}

read_options(){
    local choice
    read -p "Enter choice [ 1 - 5] " choice
    case $choice in
        1) Glances ;;
        2) Htop ;;
        3) Termite ;;
        4) Tilix ;;
        5) exit 0;;
        *) echo -e "${RED}Error...${STD}" && sleep 1
    esac
}

Glances(){
	tput setaf 2
	echo "Install Glances?"
	tput setaf 3
        echo "https://github.com/nicolargo/glances"
	tput sgr0
	pause
	echo "Installing Glances"
        pip install glances
	glances
        pause
}
 
Htop(){	
	tput setaf 2
	echo "Install Htop?"
	tput setaf 3
        echo "https://github.com/hishamhm/htop"
	tput sgr0
	pause
        apt-get install htop
	htop
        pause
}

Termite(){
    tput setaf 2
    echo "Install Termite?"
    tput setaf 3
    echo "https://github.com/thestinger/termite"
    tput sgr0
    pause
    echo "Requires gtk"
    git clone --recursive https://github.com/thestinger/termite.git
    cd termite && make
    clear
    termite
    pause
    return
}

Tilix(){
    tput setaf 2
    echo "Install Tilix?"
    tput setaf 3
    echo "https://github.com/gnunn1/tilix"
    tput sgr0
    pause
    apt-get install tilix
    clear
    tilix
    return
}
}

Useful_Links(){
    show_menus() {
    clear
    tput sgr0
    echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"    
    echo "          Useful Links"
    echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
    echo "1. "
    echo "2. "
    echo "3. " 
    echo "4. "
    echo "5. "
    echo "6. Exit"
}

read_options(){
    local choice
    read -p "Enter choice [ 1 - 6] " choice
    case $choice in
        1)  ;;
        2)  ;;
        3)  ;;
        4)  ;;
        5)  ;;
        6) exit 0;;
        *) echo -e "${RED}Error...${STD}" && sleep 1
    esac
} 
}
# ----------------------------------------------
# Trap CTRL+C, CTRL+Z and quit singles
# ----------------------------------------------
# trap '' SIGINT SIGQUIT SIGTSTP
# -----------------------------------
# Main logic - infinite loop
# ------------------------------------
while true
do
	show_menus
	read_options 
done
